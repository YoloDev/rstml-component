[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""

# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}](<REPO>/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% macro commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}{% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} - ([{{ commit.id | truncate(length=7, end="") }}](<REPO>/commit/{{ commit.id }}))\
{% endmacro -%}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::commit(commit=commit) }}
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# postprocessors
postprocessors = [
	{ pattern = '<REPO>', replace = "https://github.com/YoloDev/rstml-component" }, # replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
	{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))" },
]
# regex for parsing and grouping commits
commit_parsers = [
	{ message = "^feat", group = "✨ Features" },
	{ message = "^fix", group = "🐛 Bug Fixes" },
	{ message = "^doc", group = "📚 Documentation" },
	{ message = "^perf", group = "⚡ Performance" },
	{ message = "^refactor", group = "♻️ Refactor" },
	{ message = "^style", group = "💄 Styling" },
	{ message = "^test", group = "🧪 Testing" },
	{ message = "^deps", group = "⬆️ Dependencies" },
	{ message = "^ci", group = "👷 CI" },
	{ message = "^chore: release", skip = true },
	{ message = "^chore", group = "🔨 Chore" },
	{ message = "^build", group = "👷 Build" },
	{ message = "^revert", group = "⏪ Revert" },
	{ message = "^wip", group = "🚧 WIP" },
]
